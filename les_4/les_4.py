## Семинар 4
# 40. Определить, позицию второго вхождения строки в списке либо сообщить, что его нет
# 41. Найти сумму чисел списка стоящих на нечетной позиции
# 42. Найти произведение пар чисел в списке. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
# > Пример: [2, 3, 4, 5, 6] => [12, 15, 16]; [2, 3, 5, 6] => [12, 15] 
# 43. В заданном списке вещественных чисел найдите разницу между максимальным и минимальным значением дробной части элементов.
# > Пример: [1.1, 1.2, 3.1, 5, 10.01] => 0.19
# 44. Написать программу преобразования десятичного числа в двоичное
# 45. Дано число. Составить список чисел Фибоначчи, в том числе для отрицательных индексов
# 46. Строка содержит набор чисел. Показать большее и меньшее число
# 47. Найти корни квадратного уравнения Ax² + Bx + C = 0
#   * Математикой
#   * Используя дополнительные библиотеки*
# 48. Найти НОК двух чисел
# 49. Вычислить число c заданной точностью d
# > Пример: при d = 0.001, π = 3.141. 10-1≤d≤10-10
# 50. Составить список простых множителей натурального числа N

import os
import random

def nod(a, b):
    while a != 0 and b != 0:
        if a > b:
            a = a % b
        else:
            b = b % a
    return a + b

def bbp(n):
    pi = 0
    k = 0
    while k < n:
        pi += (1/(16**k))*(4/(8*k+1)-2/(8*k+4)-1/(8*k+5)-1/(8*k+6))
        k += 1
    return pi

os.system('cls')
print('40. Определить, позицию второго вхождения строки в списке либо сообщить, что его нет')
print('41. Найти сумму чисел списка стоящих на нечетной позиции')
print('42. Найти произведение пар чисел в списке. Парой считаем первый и последний элемент, второй и предпоследний и т.д.')
print('43. В заданном списке вещественных чисел найдите разницу между максимальным и минимальным значением дробной части элементов')
print('44. Написать программу преобразования десятичного числа в двоичное')
print('45. Дано число. Составить список чисел Фибоначчи, в том числе для отрицательных индексов')
print('46. Строка содержит набор чисел. Показать большее и меньшее число')
print('47. Найти корни квадратного уравнения Ax² + Bx + C = 0')
print('48. Найти НОК двух чисел')
print('49. Вычислить число π c заданной точностью d')
print('50. Составить список простых множителей натурального числа N')
input_num = int(input('Введите номер задачи для проверки: '))


if input_num == 40:  # Определить, позицию второго вхождения строки в списке либо сообщить, что его нет
    string_list = ['Съешь еще', 'этих', 'мягких французских']
    print(f'Список строк: {string_list}')
    substring = input('Введите подстроку для проверки: ')
    n = int(input('Введите какое по счету вхождение ищем: '))
    count = 0
    last_contain_list = -1
    for string in string_list:
        last_contain_symbol = -1
        last_contain_list += 1
        while count < n:
            result = string.find(substring, last_contain_symbol + 1)
            if result == -1: break
            else:
                last_contain_symbol = result
                count += 1
        if count == n: break
    if count == 0:
        print('Подстрока не содержится в списке строк')
    elif count < n:
        print(f'Вхождение {n} нет. Последнее вхождение {count}: список {last_contain_list}, номер символа {last_contain_symbol}')
    elif count == n:
        print(f'Вхождение {n}: список {last_contain_list}, номер символа {last_contain_symbol}')


if input_num == 41:  # Найти сумму чисел списка стоящих на нечетной позиции
    n = int(input('Введите длину списка. Список сгенерируется случайными числами [-10, 10]: '))
    numbers = [random.randint(-10, 10) for i in range(0, n)]
    print(f'Начальный список: {numbers}')
    print(f'Сумма чисел на четной позиции {sum([value if i % 2 == 0 else 0 for i, value in enumerate(numbers)])}')


if input_num == 42:  # Найти произведение пар чисел в списке. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
    n = int(input('Введите длину списка. Список сгенерируется случайными числами [-10, 10]: '))
    numbers = [random.randint(-10, 10) for i in range(0, n)]
    print(f'Начальный список: {numbers}')
    last = len(numbers) - 1
    result = [numbers[i] * numbers[last - i] for i in range(0, (last + 1) // 2)]
    print(f'Список произведений {result}')


if input_num == 43:  # В заданном списке вещественных чисел найдите разницу между максимальным и минимальным значением дробной части элементов
    n = int(input('Введите длину списка. Список сгенерируется случайными вещественными числами [-10, 10]: '))
    numbers = [random.randint(-1000, 1000) / 100 for i in range(0, n)]
    print(f'Начальный список: {numbers}')
    fractions = [round(abs(i) % 1, 2) for i in numbers]
    print(f'Разница: {max(fractions) - min(fractions) : .2f}')


if input_num == 44:  # Написать программу преобразования десятичного числа в двоичное
    n = int(input('N = '))
    x = n
    result = ''
    while x >= 1:
        result = str(x % 2) + result
        x = x // 2
    print(f'{n} в двоичном представлении: {result}')


if input_num == 45:  # Дано число. Составить список чисел Фибоначчи, в том числе для отрицательных индексов
    n = int(input('N = '))
    fibonacci = []
    for i in range(0, n):
        if i == 0 :
            fibonacci.append(0)
        elif i == 1:
            fibonacci.insert(0, -1)
            fibonacci.append(1)
        else:
            x = fibonacci[0] + fibonaci[1]
            fibonacci.insert(0, x)
            fibonacci.append(-x)
    print(f'{n} элементов Фибоначи: {fibonacci}')


if input_num == 46:  # Строка содержит набор чисел. Показать большее и меньшее число
    str = input('Введите строку цифр. Используйте рахделитель пробел: ')
    list = [int(substr) for substr in str.split(' ')]
    print(f'Больший элемент строки чисел: {max(list)}. Меньший: {min(list)}.')


if input_num == 47:  # Найти корни квадратного уравнения Ax² + Bx + C = 0
    a = int(input('A = '))
    b = int(input('B = '))
    c = int(input('C = '))
    d = b**2-4*a*c
    if d < 0:
        print('Действительных корней нет')
    elif d == 0:
        print(f'Единственный корень x={round(-b/(2*a), 2)}')
    else:
        print(f'Корни уравнения x={round((-b-d**0.5)/(2*a), 5)} и x={round((-b+d**0.5)/(2*a), 5)}')


if input_num == 48:  # Найти НОК двух чисел
    a = int(input('A = '))
    b = int(input('B = '))
    print(f'НОК = {round(a * b / nod(a, b))}')


if input_num == 49:  # Вычислить число π c заданной точностью d
    d = int(input('D = '))
    print(f'pi = {round(bbp(d), d)}')


if input_num == 50:  # Составить список простых множителей натурального числа N
    n = int(input('N = '))
    div = 2
    list = [1]
    while n > 1:
        while n % div == 0:
            list.append(div)
            n /= div
        div += 1
    print(f'Список простых множителей: {list}')
